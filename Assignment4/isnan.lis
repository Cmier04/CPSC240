     1                                  ;****************************************************************************************************************************
     2                                  ;Program name: "Assignment 4, Non-Deterministic Random Numbers". This program generates random IEEE754 numbers and          *
     3                                  ;displays their scientific decimal form, as well as sorts and displays the array of random numbers.                         *
     4                                  ;Copyright (C) 2024  Christine Mier                                                                                         *
     5                                  ;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *
     6                                  ;version 3 as published by the Free Software Foundation.                                                                    *
     7                                  ;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied         *
     8                                  ;warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.     *
     9                                  ;A copy of the GNU General Public License v3 is available here:  <https://www.gnu.org/licenses/>.                           *
    10                                  ;****************************************************************************************************************************
    11                                  
    12                                  
    13                                  
    14                                  ;========1=========2=========3=========4=========5=========6=========7=========8=========9=========0=========1=========2=========3=========4=========5=========6=========7**
    15                                  ;Author information
    16                                  ;  Author name: Christine Mier
    17                                  ;  Author email: cmier@csu.fullerton.edu
    18                                  ;
    19                                  ;Program information
    20                                  ; Program name: Assignment 4, Non-Deterministic Random Numbers
    21                                  ;  Programming languages X86 with two modules in C++
    22                                  ;  Date development of version 1 began 2024-Oct-22
    23                                  ;  Date development of version 1 completed 2024-Nov-03
    24                                  ;
    25                                  ;Purpose
    26                                  ;  This program generates random IEEE754 numbers and displays their scientific decimal form as well as sorts and displays the array of random numbers.
    27                                  ;
    28                                  ;Project information
    29                                  ;  Files: main.cpp, executive.asm, fill_random_array.asm, show_array.asm, normalize_array.asm, isnan.asm, sort.cpp, run.sh
    30                                  ;  Status: The program has been tested extensively with no detectable errors. However, it does not normalize the array and sorts/prints the normalized array as
    31                                  ;          this function call has been removed due to an infinite loop issue.
    32                                  ;
    33                                  ;Translator information
    34                                  ;  Linux: nasm -f elf64 -l isnan.lis -o isnan.o isnan.asm
    35                                  
    36                                  ;References and credits
    37                                  
    38                                  ;Format information
    39                                  ;  Page width: 172 columns
    40                                  ;  Begin comments: 61
    41                                  ;  Optimal print specification: Landscape, 7 points, monospace, 8Â½x11 paper
    42                                  ;
    43                                  ;===== Begin code area ====================================================================================================================================================
    44                                  
    45                                  global isnan
    46                                  
    47                                  segment .data
    48                                  
    49                                  segment .bss
    50                                  
    51                                  segment .text
    52                                  isnan:
    53                                  ;backup GPRs
    54 00000000 55                      push rbp
    55 00000001 4889E5                  mov rbp, rsp
    56 00000004 53                      push rbx
    57 00000005 51                      push rcx
    58 00000006 52                      push rdx
    59 00000007 57                      push rdi
    60 00000008 56                      push rsi
    61 00000009 4150                    push r8
    62 0000000B 4151                    push r9
    63 0000000D 4152                    push r10
    64 0000000F 4153                    push r11
    65 00000011 4154                    push r12
    66 00000013 4155                    push r13
    67 00000015 4156                    push r14
    68 00000017 4157                    push r15
    69 00000019 9C                      pushf
    70                                  
    71                                  ;move number into xmm15
    72 0000001A F2440F10F8              movsd     xmm15, xmm0
    73                                  
    74                                  ;check if number is nan and jump to nan function
    75 0000001F 66450F2EFF              ucomisd     xmm15, xmm15
    76 00000024 7A07                    jp      nan
    77 00000026 B801000000              mov     rax, 1
    78 0000002B EB05                    jmp     endloop
    79                                  
    80                                  ;nan function if is nan
    81                                  nan:
    82 0000002D B800000000              mov     rax, 0
    83                                  
    84                                  ;exit functon
    85                                  endloop:
    86                                  
    87                                  ;restore GPRs
    88 00000032 9D                      popf
    89 00000033 415F                    pop r15
    90 00000035 415E                    pop r14
    91 00000037 415D                    pop r13
    92 00000039 415C                    pop r12
    93 0000003B 415B                    pop r11
    94 0000003D 415A                    pop r10
    95 0000003F 4159                    pop r9
    96 00000041 4158                    pop r8
    97 00000043 5E                      pop rsi
    98 00000044 5F                      pop rdi
    99 00000045 5A                      pop rdx
   100 00000046 59                      pop rcx
   101 00000047 5B                      pop rbx
   102 00000048 5D                      pop rbp
   103                                  
   104 00000049 C3                      ret
